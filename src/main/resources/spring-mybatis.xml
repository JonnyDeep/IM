<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-4.3.xsd">

    <context:property-placeholder location="classpath*:druid.properties"/>

    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="url" value="${jdbc.jdbcurl}"/>
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>

    <!--<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">-->
        <!--<property name="dataSource" ref="dataSource"/>-->
        <!--&lt;!&ndash;查找Mapper.xml文件&ndash;&gt;-->
        <!--<property name="mapperLocations" value="classpath*:cn/jonny/mapper/*Mapper.xml"/>-->
        <!--&lt;!&ndash;指定mybatis配置文件，spring会覆盖数据源，envriment，以及事务管理，所以只需要配置<setteing></setteing>&ndash;&gt;-->
        <!--&lt;!&ndash;和<typeAliases></typeAliases>即可&ndash;&gt;-->
        <!--<property name="configLocation" value="classpath:druidmybatis-config.xml"/>-->
    <!--</bean>-->

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <!--查找Mapper.xml文件-->
        <property name="mapperLocations" value="classpath*:cn/jonny/mapper/**/*Mapper.xml"/>
        <!--指定mybatis配置文件，spring会覆盖数据源，envriment，以及事务管理，所以只需要配置<setteing></setteing>-->
        <!--和<typeAliases></typeAliases>即可-->
        <property name="configLocation" value="classpath:druidmybatis-config.xml"/>
    </bean>

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <!--指定自动扫描接口的基础包，实现接口 相当于userMapper = sqlSession.getMapper()-->
        <property name="basePackage" value="cn.jonny.mapper"/>
    </bean>

    <!--配置事务管理，此处的dataSource 必须和 SqlsessionFactoryBean的dataSource 一样-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <bean id="globalStaticVariable" class="cn.jonny.GlobalStaticVariable"></bean>
    <bean id="serverListen" class="cn.jonny.Server.ServerListen">
        <constructor-arg index="0">
            <value>8080</value>
        </constructor-arg>
    </bean>



    <context:component-scan base-package="cn.jonny.Server"/>
    <context:annotation-config></context:annotation-config>
</beans>